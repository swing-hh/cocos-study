{"version":3,"sources":["assets/scripts/Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","update","dt","gameOver","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n\n        // Player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        }\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // // 生成一个新的星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n\n        this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        // 停止 Player 节点的跳跃动作\n        this.player.stopAllActions(); \n\n        // 重新加载场景 game\n        cc.director.loadScene('game');\n    },\n\n    spawnNewStar: function() {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n\n        // 在星星脚本组件上保存 Game 对象的引用\n        newStar.getComponent('Star').game = this;\n\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}